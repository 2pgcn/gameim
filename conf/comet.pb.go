// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.1
// source: comet.proto

package conf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QueueType int32

const (
	QueueType_KAFKA QueueType = 0
)

// Enum value maps for QueueType.
var (
	QueueType_name = map[int32]string{
		0: "KAFKA",
	}
	QueueType_value = map[string]int32{
		"KAFKA": 0,
	}
)

func (x QueueType) Enum() *QueueType {
	p := new(QueueType)
	*p = x
	return p
}

func (x QueueType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QueueType) Descriptor() protoreflect.EnumDescriptor {
	return file_comet_proto_enumTypes[0].Descriptor()
}

func (QueueType) Type() protoreflect.EnumType {
	return &file_comet_proto_enumTypes[0]
}

func (x QueueType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QueueType.Descriptor instead.
func (QueueType) EnumDescriptor() ([]byte, []int) {
	return file_comet_proto_rawDescGZIP(), []int{0}
}

type ServerMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Addrs          []string `protobuf:"bytes,2,rep,name=addrs,proto3" json:"addrs,omitempty"`
	Port           int32    `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	MaxConnections uint32   `protobuf:"varint,4,opt,name=max_connections,json=maxConnections,proto3" json:"max_connections,omitempty"` //max conn nums
	Goroutines     uint32   `protobuf:"varint,5,opt,name=goroutines,proto3" json:"goroutines,omitempty"`                               //go routines nums default is 0 means use cpu nums
}

func (x *ServerMsg) Reset() {
	*x = ServerMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comet_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerMsg) ProtoMessage() {}

func (x *ServerMsg) ProtoReflect() protoreflect.Message {
	mi := &file_comet_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerMsg.ProtoReflect.Descriptor instead.
func (*ServerMsg) Descriptor() ([]byte, []int) {
	return file_comet_proto_rawDescGZIP(), []int{0}
}

func (x *ServerMsg) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServerMsg) GetAddrs() []string {
	if x != nil {
		return x.Addrs
	}
	return nil
}

func (x *ServerMsg) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ServerMsg) GetMaxConnections() uint32 {
	if x != nil {
		return x.MaxConnections
	}
	return 0
}

func (x *ServerMsg) GetGoroutines() uint32 {
	if x != nil {
		return x.Goroutines
	}
	return 0
}

type QueueMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  string          `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Redis *QueueMsg_Redis `protobuf:"bytes,2,opt,name=redis,proto3" json:"redis,omitempty"`
	Kafka *QueueMsg_Kafka `protobuf:"bytes,3,opt,name=kafka,proto3" json:"kafka,omitempty"`
}

func (x *QueueMsg) Reset() {
	*x = QueueMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comet_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueueMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueMsg) ProtoMessage() {}

func (x *QueueMsg) ProtoReflect() protoreflect.Message {
	mi := &file_comet_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueMsg.ProtoReflect.Descriptor instead.
func (*QueueMsg) Descriptor() ([]byte, []int) {
	return file_comet_proto_rawDescGZIP(), []int{1}
}

func (x *QueueMsg) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *QueueMsg) GetRedis() *QueueMsg_Redis {
	if x != nil {
		return x.Redis
	}
	return nil
}

func (x *QueueMsg) GetKafka() *QueueMsg_Kafka {
	if x != nil {
		return x.Kafka
	}
	return nil
}

type SslMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enable bool   `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
	Key    string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Cert   string `protobuf:"bytes,3,opt,name=cert,proto3" json:"cert,omitempty"`
}

func (x *SslMsg) Reset() {
	*x = SslMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comet_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SslMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SslMsg) ProtoMessage() {}

func (x *SslMsg) ProtoReflect() protoreflect.Message {
	mi := &file_comet_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SslMsg.ProtoReflect.Descriptor instead.
func (*SslMsg) Descriptor() ([]byte, []int) {
	return file_comet_proto_rawDescGZIP(), []int{2}
}

func (x *SslMsg) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *SslMsg) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SslMsg) GetCert() string {
	if x != nil {
		return x.Cert
	}
	return ""
}

type TcpMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SendBuf   uint64 `protobuf:"varint,1,opt,name=send_buf,json=sendBuf,proto3" json:"send_buf,omitempty"`
	RecvBuf   uint64 `protobuf:"varint,2,opt,name=recv_buf,json=recvBuf,proto3" json:"recv_buf,omitempty"`
	Keepalive bool   `protobuf:"varint,3,opt,name=keepalive,proto3" json:"keepalive,omitempty"`
}

func (x *TcpMsg) Reset() {
	*x = TcpMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comet_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TcpMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TcpMsg) ProtoMessage() {}

func (x *TcpMsg) ProtoReflect() protoreflect.Message {
	mi := &file_comet_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TcpMsg.ProtoReflect.Descriptor instead.
func (*TcpMsg) Descriptor() ([]byte, []int) {
	return file_comet_proto_rawDescGZIP(), []int{3}
}

func (x *TcpMsg) GetSendBuf() uint64 {
	if x != nil {
		return x.SendBuf
	}
	return 0
}

func (x *TcpMsg) GetRecvBuf() uint64 {
	if x != nil {
		return x.RecvBuf
	}
	return 0
}

func (x *TcpMsg) GetKeepalive() bool {
	if x != nil {
		return x.Keepalive
	}
	return false
}

type LogicClientGrpc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr    string `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Timeout uint32 `protobuf:"varint,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *LogicClientGrpc) Reset() {
	*x = LogicClientGrpc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comet_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogicClientGrpc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogicClientGrpc) ProtoMessage() {}

func (x *LogicClientGrpc) ProtoReflect() protoreflect.Message {
	mi := &file_comet_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogicClientGrpc.ProtoReflect.Descriptor instead.
func (*LogicClientGrpc) Descriptor() ([]byte, []int) {
	return file_comet_proto_rawDescGZIP(), []int{4}
}

func (x *LogicClientGrpc) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *LogicClientGrpc) GetTimeout() uint32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

type AppConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid string `protobuf:"bytes,1,opt,name=appid,proto3" json:"appid,omitempty"`
	// todo 暂未启用认证
	Pwd string `protobuf:"bytes,2,opt,name=pwd,proto3" json:"pwd,omitempty"`
	// bucket 根据bucketNum哈希 减少app里存储的全区的锁力度
	BucketNum int32 `protobuf:"varint,3,opt,name=bucketNum,proto3" json:"bucketNum,omitempty"`
}

func (x *AppConfig) Reset() {
	*x = AppConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comet_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppConfig) ProtoMessage() {}

func (x *AppConfig) ProtoReflect() protoreflect.Message {
	mi := &file_comet_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppConfig.ProtoReflect.Descriptor instead.
func (*AppConfig) Descriptor() ([]byte, []int) {
	return file_comet_proto_rawDescGZIP(), []int{5}
}

func (x *AppConfig) GetAppid() string {
	if x != nil {
		return x.Appid
	}
	return ""
}

func (x *AppConfig) GetPwd() string {
	if x != nil {
		return x.Pwd
	}
	return ""
}

func (x *AppConfig) GetBucketNum() int32 {
	if x != nil {
		return x.BucketNum
	}
	return 0
}

type CometConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Server          *ServerMsg       `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"`
	Queue           *QueueMsg        `protobuf:"bytes,2,opt,name=queue,proto3" json:"queue,omitempty"`
	Ssl             *SslMsg          `protobuf:"bytes,3,opt,name=ssl,proto3" json:"ssl,omitempty"`
	Tcp             *TcpMsg          `protobuf:"bytes,4,opt,name=tcp,proto3" json:"tcp,omitempty"`
	LogicClientGrpc *LogicClientGrpc `protobuf:"bytes,5,opt,name=logic_client_grpc,json=logicClientGrpc,proto3" json:"logic_client_grpc,omitempty"`
	AppConfig       []*AppConfig     `protobuf:"bytes,6,rep,name=app_config,json=appConfig,proto3" json:"app_config,omitempty"`
	TraceConf       *TraceConf       `protobuf:"bytes,7,opt,name=TraceConf,proto3" json:"TraceConf,omitempty"`
}

func (x *CometConfig) Reset() {
	*x = CometConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comet_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CometConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CometConfig) ProtoMessage() {}

func (x *CometConfig) ProtoReflect() protoreflect.Message {
	mi := &file_comet_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CometConfig.ProtoReflect.Descriptor instead.
func (*CometConfig) Descriptor() ([]byte, []int) {
	return file_comet_proto_rawDescGZIP(), []int{6}
}

func (x *CometConfig) GetServer() *ServerMsg {
	if x != nil {
		return x.Server
	}
	return nil
}

func (x *CometConfig) GetQueue() *QueueMsg {
	if x != nil {
		return x.Queue
	}
	return nil
}

func (x *CometConfig) GetSsl() *SslMsg {
	if x != nil {
		return x.Ssl
	}
	return nil
}

func (x *CometConfig) GetTcp() *TcpMsg {
	if x != nil {
		return x.Tcp
	}
	return nil
}

func (x *CometConfig) GetLogicClientGrpc() *LogicClientGrpc {
	if x != nil {
		return x.LogicClientGrpc
	}
	return nil
}

func (x *CometConfig) GetAppConfig() []*AppConfig {
	if x != nil {
		return x.AppConfig
	}
	return nil
}

func (x *CometConfig) GetTraceConf() *TraceConf {
	if x != nil {
		return x.TraceConf
	}
	return nil
}

type TraceConf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlsProjectHeader         string `protobuf:"bytes,1,opt,name=slsProjectHeader,proto3" json:"slsProjectHeader,omitempty"`
	SlsInstanceIDHeader      string `protobuf:"bytes,2,opt,name=slsInstanceIDHeader,proto3" json:"slsInstanceIDHeader,omitempty"`
	SlsAccessKeyIDHeader     string `protobuf:"bytes,3,opt,name=slsAccessKeyIDHeader,proto3" json:"slsAccessKeyIDHeader,omitempty"`
	SlsAccessKeySecretHeader string `protobuf:"bytes,4,opt,name=slsAccessKeySecretHeader,proto3" json:"slsAccessKeySecretHeader,omitempty"`
	Endpoint                 string `protobuf:"bytes,5,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
}

func (x *TraceConf) Reset() {
	*x = TraceConf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comet_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TraceConf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TraceConf) ProtoMessage() {}

func (x *TraceConf) ProtoReflect() protoreflect.Message {
	mi := &file_comet_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TraceConf.ProtoReflect.Descriptor instead.
func (*TraceConf) Descriptor() ([]byte, []int) {
	return file_comet_proto_rawDescGZIP(), []int{7}
}

func (x *TraceConf) GetSlsProjectHeader() string {
	if x != nil {
		return x.SlsProjectHeader
	}
	return ""
}

func (x *TraceConf) GetSlsInstanceIDHeader() string {
	if x != nil {
		return x.SlsInstanceIDHeader
	}
	return ""
}

func (x *TraceConf) GetSlsAccessKeyIDHeader() string {
	if x != nil {
		return x.SlsAccessKeyIDHeader
	}
	return ""
}

func (x *TraceConf) GetSlsAccessKeySecretHeader() string {
	if x != nil {
		return x.SlsAccessKeySecretHeader
	}
	return ""
}

func (x *TraceConf) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

type QueueMsg_Redis struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr     string `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Db       int32  `protobuf:"varint,3,opt,name=db,proto3" json:"db,omitempty"`
}

func (x *QueueMsg_Redis) Reset() {
	*x = QueueMsg_Redis{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comet_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueueMsg_Redis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueMsg_Redis) ProtoMessage() {}

func (x *QueueMsg_Redis) ProtoReflect() protoreflect.Message {
	mi := &file_comet_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueMsg_Redis.ProtoReflect.Descriptor instead.
func (*QueueMsg_Redis) Descriptor() ([]byte, []int) {
	return file_comet_proto_rawDescGZIP(), []int{1, 0}
}

func (x *QueueMsg_Redis) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *QueueMsg_Redis) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *QueueMsg_Redis) GetDb() int32 {
	if x != nil {
		return x.Db
	}
	return 0
}

type QueueMsgSasl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username   string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password   string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	InstanceId string `protobuf:"bytes,3,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
}

func (x *QueueMsgSasl) Reset() {
	*x = QueueMsgSasl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comet_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueueMsgSasl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueMsgSasl) ProtoMessage() {}

func (x *QueueMsgSasl) ProtoReflect() protoreflect.Message {
	mi := &file_comet_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueMsgSasl.ProtoReflect.Descriptor instead.
func (*QueueMsgSasl) Descriptor() ([]byte, []int) {
	return file_comet_proto_rawDescGZIP(), []int{1, 1}
}

func (x *QueueMsgSasl) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *QueueMsgSasl) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *QueueMsgSasl) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

type QueueMsg_Kafka struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic            string        `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Sasl             *QueueMsgSasl `protobuf:"bytes,2,opt,name=sasl,proto3" json:"sasl,omitempty"`
	BootstrapServers []string      `protobuf:"bytes,3,rep,name=bootstrap_servers,json=bootstrapServers,proto3" json:"bootstrap_servers,omitempty"`
	ConsumerGroupId  string        `protobuf:"bytes,4,opt,name=consumer_group_id,json=consumerGroupId,proto3" json:"consumer_group_id,omitempty"`
	PartitionNum     int32         `protobuf:"varint,5,opt,name=partition_num,json=partitionNum,proto3" json:"partition_num,omitempty"`
}

func (x *QueueMsg_Kafka) Reset() {
	*x = QueueMsg_Kafka{}
	if protoimpl.UnsafeEnabled {
		mi := &file_comet_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueueMsg_Kafka) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueueMsg_Kafka) ProtoMessage() {}

func (x *QueueMsg_Kafka) ProtoReflect() protoreflect.Message {
	mi := &file_comet_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueueMsg_Kafka.ProtoReflect.Descriptor instead.
func (*QueueMsg_Kafka) Descriptor() ([]byte, []int) {
	return file_comet_proto_rawDescGZIP(), []int{1, 2}
}

func (x *QueueMsg_Kafka) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *QueueMsg_Kafka) GetSasl() *QueueMsgSasl {
	if x != nil {
		return x.Sasl
	}
	return nil
}

func (x *QueueMsg_Kafka) GetBootstrapServers() []string {
	if x != nil {
		return x.BootstrapServers
	}
	return nil
}

func (x *QueueMsg_Kafka) GetConsumerGroupId() string {
	if x != nil {
		return x.ConsumerGroupId
	}
	return ""
}

func (x *QueueMsg_Kafka) GetPartitionNum() int32 {
	if x != nil {
		return x.PartitionNum
	}
	return 0
}

var File_comet_proto protoreflect.FileDescriptor

var file_comet_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x63,
	0x6f, 0x6e, 0x66, 0x22, 0x92, 0x01, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x73,
	0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x64, 0x64, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x61, 0x64, 0x64, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x27, 0x0a, 0x0f, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x6f, 0x72, 0x6f,
	0x75, 0x74, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x67, 0x6f,
	0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x73, 0x22, 0xe7, 0x03, 0x0a, 0x08, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x05, 0x72, 0x65, 0x64,
	0x69, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e,
	0x71, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x52, 0x65, 0x64, 0x69, 0x73, 0x52, 0x05,
	0x72, 0x65, 0x64, 0x69, 0x73, 0x12, 0x2a, 0x0a, 0x05, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x71, 0x75, 0x65, 0x75,
	0x65, 0x4d, 0x73, 0x67, 0x2e, 0x4b, 0x61, 0x66, 0x6b, 0x61, 0x52, 0x05, 0x6b, 0x61, 0x66, 0x6b,
	0x61, 0x1a, 0x47, 0x0a, 0x05, 0x52, 0x65, 0x64, 0x69, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64,
	0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x62,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x64, 0x62, 0x1a, 0x5f, 0x0a, 0x04, 0x73, 0x61,
	0x73, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x1a, 0xc4, 0x01, 0x0a, 0x05,
	0x4b, 0x61, 0x66, 0x6b, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x27, 0x0a, 0x04, 0x73,
	0x61, 0x73, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x2e, 0x71, 0x75, 0x65, 0x75, 0x65, 0x4d, 0x73, 0x67, 0x2e, 0x73, 0x61, 0x73, 0x6c, 0x52, 0x04,
	0x73, 0x61, 0x73, 0x6c, 0x12, 0x2b, 0x0a, 0x11, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61,
	0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x10, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x73, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4e,
	0x75, 0x6d, 0x22, 0x46, 0x0a, 0x06, 0x73, 0x73, 0x6c, 0x4d, 0x73, 0x67, 0x12, 0x16, 0x0a, 0x06,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x65, 0x72, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x65, 0x72, 0x74, 0x22, 0x5c, 0x0a, 0x06, 0x74, 0x63,
	0x70, 0x4d, 0x73, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x62, 0x75, 0x66,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x65, 0x6e, 0x64, 0x42, 0x75, 0x66, 0x12,
	0x19, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x76, 0x5f, 0x62, 0x75, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x07, 0x72, 0x65, 0x63, 0x76, 0x42, 0x75, 0x66, 0x12, 0x1c, 0x0a, 0x09, 0x6b, 0x65,
	0x65, 0x70, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6b,
	0x65, 0x65, 0x70, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x22, 0x3f, 0x0a, 0x0f, 0x6c, 0x6f, 0x67, 0x69,
	0x63, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x70, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x61,
	0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0x52, 0x0a, 0x0a, 0x61, 0x70, 0x70,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x70, 0x77, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x77, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x4e, 0x75, 0x6d, 0x22, 0xbf, 0x02,
	0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x27, 0x0a,
	0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x73, 0x67, 0x52, 0x06,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x71, 0x75, 0x65,
	0x75, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x05, 0x71, 0x75, 0x65, 0x75, 0x65, 0x12, 0x1e, 0x0a, 0x03,
	0x73, 0x73, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x2e, 0x73, 0x73, 0x6c, 0x4d, 0x73, 0x67, 0x52, 0x03, 0x73, 0x73, 0x6c, 0x12, 0x1e, 0x0a, 0x03,
	0x74, 0x63, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6e, 0x66,
	0x2e, 0x74, 0x63, 0x70, 0x4d, 0x73, 0x67, 0x52, 0x03, 0x74, 0x63, 0x70, 0x12, 0x41, 0x0a, 0x11,
	0x6c, 0x6f, 0x67, 0x69, 0x63, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x72, 0x70,
	0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x6c,
	0x6f, 0x67, 0x69, 0x63, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x70, 0x63, 0x52, 0x0f,
	0x6c, 0x6f, 0x67, 0x69, 0x63, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x47, 0x72, 0x70, 0x63, 0x12,
	0x2f, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x61, 0x70, 0x70, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x09, 0x61, 0x70, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x2d, 0x0a, 0x09, 0x54, 0x72, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x52, 0x09, 0x54, 0x72, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x22,
	0xf5, 0x01, 0x0a, 0x09, 0x54, 0x72, 0x61, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x12, 0x2a, 0x0a,
	0x10, 0x73, 0x6c, 0x73, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x6c, 0x73, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x13, 0x73, 0x6c, 0x73,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x6c, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x49, 0x44, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x14, 0x73,
	0x6c, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x49, 0x44, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x73, 0x6c, 0x73, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x49, 0x44, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x3a, 0x0a, 0x18, 0x73, 0x6c, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x18, 0x73, 0x6c, 0x73, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x65,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x2a, 0x16, 0x0a, 0x09, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x4b, 0x41, 0x46, 0x4b, 0x41, 0x10, 0x00, 0x42,
	0x23, 0x5a, 0x21, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x32, 0x70,
	0x67, 0x63, 0x6e, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x69, 0x6d, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x3b,
	0x63, 0x6f, 0x6e, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_comet_proto_rawDescOnce sync.Once
	file_comet_proto_rawDescData = file_comet_proto_rawDesc
)

func file_comet_proto_rawDescGZIP() []byte {
	file_comet_proto_rawDescOnce.Do(func() {
		file_comet_proto_rawDescData = protoimpl.X.CompressGZIP(file_comet_proto_rawDescData)
	})
	return file_comet_proto_rawDescData
}

var file_comet_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_comet_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_comet_proto_goTypes = []interface{}{
	(QueueType)(0),          // 0: conf.QueueType
	(*ServerMsg)(nil),       // 1: conf.serverMsg
	(*QueueMsg)(nil),        // 2: conf.queueMsg
	(*SslMsg)(nil),          // 3: conf.sslMsg
	(*TcpMsg)(nil),          // 4: conf.tcpMsg
	(*LogicClientGrpc)(nil), // 5: conf.logicClientGrpc
	(*AppConfig)(nil),       // 6: conf.app_config
	(*CometConfig)(nil),     // 7: conf.CometConfig
	(*TraceConf)(nil),       // 8: conf.TraceConf
	(*QueueMsg_Redis)(nil),  // 9: conf.queueMsg.Redis
	(*QueueMsgSasl)(nil),    // 10: conf.queueMsg.sasl
	(*QueueMsg_Kafka)(nil),  // 11: conf.queueMsg.Kafka
}
var file_comet_proto_depIdxs = []int32{
	9,  // 0: conf.queueMsg.redis:type_name -> conf.queueMsg.Redis
	11, // 1: conf.queueMsg.kafka:type_name -> conf.queueMsg.Kafka
	1,  // 2: conf.CometConfig.server:type_name -> conf.serverMsg
	2,  // 3: conf.CometConfig.queue:type_name -> conf.queueMsg
	3,  // 4: conf.CometConfig.ssl:type_name -> conf.sslMsg
	4,  // 5: conf.CometConfig.tcp:type_name -> conf.tcpMsg
	5,  // 6: conf.CometConfig.logic_client_grpc:type_name -> conf.logicClientGrpc
	6,  // 7: conf.CometConfig.app_config:type_name -> conf.app_config
	8,  // 8: conf.CometConfig.TraceConf:type_name -> conf.TraceConf
	10, // 9: conf.queueMsg.Kafka.sasl:type_name -> conf.queueMsg.sasl
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_comet_proto_init() }
func file_comet_proto_init() {
	if File_comet_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_comet_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comet_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueueMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comet_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SslMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comet_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TcpMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comet_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogicClientGrpc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comet_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comet_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CometConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comet_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TraceConf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comet_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueueMsg_Redis); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comet_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueueMsgSasl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_comet_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueueMsg_Kafka); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_comet_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_comet_proto_goTypes,
		DependencyIndexes: file_comet_proto_depIdxs,
		EnumInfos:         file_comet_proto_enumTypes,
		MessageInfos:      file_comet_proto_msgTypes,
	}.Build()
	File_comet_proto = out.File
	file_comet_proto_rawDesc = nil
	file_comet_proto_goTypes = nil
	file_comet_proto_depIdxs = nil
}
