syntax = "proto3";
package conf;

option go_package = "github.com/2pgcn/gameim/conf;conf";

import "google/protobuf/duration.proto";
import "comet.proto";

enum DataType {
  ETCD = 0;
  K8S = 1;
}
message Bootstrap {
  Server server = 1;
  Data data = 2;
}

enum kubernetesClientType{
  INCluster = 0;
  Config = 1;
}
message kubernetes{
  kubernetesClientType kubernetes_client_type = 1;
  string kube_config_path = 2;
}
message Register{
  DataType type = 1;
  kubernetes kube_config = 2;
  string services_name = 3;
}
message Server {
  message HTTP {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration timeout = 3;
  }
  message GRPC {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration timeout = 3;
  }

  HTTP http = 1;
  GRPC grpc = 2;
  Register register = 3;
  TraceConf traceConf = 4;
  string pyroscope_address = 5;
}

message Data {
  message Mysql {
    string dsn_master = 1;
    repeated string dsn_slave = 2;
    int32 max_idle_connection = 3;
    int32 max_open_connection = 4;
    google.protobuf.Duration connection_max_lifetime = 5;
    string log_level = 6;
  }
  message Redis {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration read_timeout = 3;
    google.protobuf.Duration write_timeout = 4;
    google.protobuf.Duration keep_live = 5;
    int32 pool_size = 6;
    int32 use_db = 7;
  }

  message Sasl{
    string username = 1;
    string password = 2;
    string instanceId = 3;
  }
  message Kafka{
    string topic = 1;
    Sasl sasl = 2;
    repeated string bootstrapServers = 3;
    string consumerGroupId = 4;
    string group = 5;
  }
  message Nsq{
    string topic = 1;
    string channel = 2;
    repeated string address = 3;
  }
  Mysql mysql = 1;
  Redis redis = 2;
  //Kafka kafka = 3;
  Nsq nsq = 3;
}
